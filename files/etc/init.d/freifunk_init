#!/bin/sh /etc/rc.common

START=19


#allow/block access via ssh/https
set_access() {
	local default_target src port s
	local access_from=`uci get -q freifunk.@settings[0].access_from`

	echo "(I) Freifunk: access_from: '$access_from'"

	find_default_target() {
		local s="$1" src="$2" n=""
		config_get n "$s" name
		[ "$src" == "$n" ] && { config_get default_target "$s" input; return 1; }
	}

	#filter ssh/https ports
	config_load firewall
	for src in wan private public; do
		default_target=""
		config_foreach find_default_target 'zone' $src
		list_contains access_from "$src" && target=ACCEPT || target=REJECT
		[ "$target" = "$default_target" ] && continue
		for port in 22 443; do
			s=firewall.`uci add firewall rule`
			uci set $s.src=$src
			uci set $s.dest_port=$port
			uci set $s.target=$target
			uci set $s.proto=tcp
		done
	done
}

#batman-adv wants unique MACs for each interface
set_macs() {
	network_set_macaddr() {
		local s="$1"
		local proto

		config_get proto $s "proto"

		if [ $proto = "batadv" ]; then
			#generate and set a random MAC
			uci set network.$s.macaddr=$(echo -n 02; dd bs=1 count=5 if=/dev/random 2>/dev/null |hexdump -v -e '/1 ":%02X"')
		fi
	}

	config_load network
	config_foreach network_set_macaddr interface
}

start()
{
	exec >/tmp/freifunk_init.log 2>&1

	echo "(I) Freifunk: start freifunk_init"

	set_access
	set_macs

	echo "(I) Freifunk: done freifunk_init"
}
